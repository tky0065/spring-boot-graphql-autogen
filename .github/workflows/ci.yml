name: 🔄 CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]


env:
  JAVA_VERSION: '21'
  JAVA_DISTRIBUTION: 'temurin'
  MAVEN_OPTS: '-Xmx1024m -XX:MaxMetaspaceSize=512m'

jobs:
  test:
    name: 🧪 Tests (${{ matrix.os }}, Java ${{ matrix.java }})
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: ['21', '17']
        exclude:
          - os: windows-latest
            java: '17'
          - os: macos-latest
            java: '17'
    
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ☕ Configuration Java ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      - name: 🧪 Tests
        run: mvn clean verify -Pci

      - name: 📊 Couverture de code
        if: matrix.os == 'ubuntu-latest' && matrix.java == '21'
        run: mvn jacoco:report

      - name: 📤 Upload couverture
        if: matrix.os == 'ubuntu-latest' && matrix.java == '21'
        uses: codecov/codecov-action@v3
        with:
          file: ./target/site/jacoco/jacoco.xml

  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      - name: 🏗️ Build
        run: mvn clean package -Pci -DskipTests=true

      - name: 📦 Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: maven-artifacts
          path: |
            */target/*.jar
            */target/*.pom

  security:
    name: 🔒 Sécurité
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      - name: 🔍 Audit dépendances
        run: mvn org.owasp:dependency-check-maven:check

  snapshot:
    name: 📦 Snapshot
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: ☕ Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      - name: 📦 Deploy Snapshot
        if: secrets.SONATYPE_USERNAME != ''
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          if [[ $VERSION == *"SNAPSHOT"* ]]; then
            echo "Deploying snapshot $VERSION"
            # mvn clean deploy -Psnapshot -DskipTests=true
          fi
