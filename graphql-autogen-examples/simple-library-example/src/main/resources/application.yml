# Configuration pour l'exemple de librairie GraphQL AutoGen
spring:
  application:
    name: simple-library-example
  
  # Configuration de la base de données H2
  datasource:
    url: jdbc:h2:mem:library
    driver-class-name: org.h2.Driver
    username: sa
    password: 
  
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # Configuration GraphQL standard
  graphql:
    graphiql:
      enabled: true
      path: /graphiql
    path: /graphql
    websocket:
      path: /graphql-ws
    cors:
      allowed-origins: "*"
      allowed-methods: GET,POST
    
    # Configuration GraphQL AutoGen
    autogen:
      enabled: true
      base-packages:
        - "com.enokdev.example.library.model"
        - "com.enokdev.example.library.controller"
        - "com.enokdev.example.library.dto"
      naming-strategy: CAMEL_CASE
      generate-inputs: true
      generate-subscriptions: true
      
      # Mapping des types personnalisés
      type-mapping:
        java.time.LocalDateTime: "DateTime"
        java.time.LocalDate: "Date"
        java.util.UUID: "ID"
        java.math.BigDecimal: "Decimal"
      
      # Configuration du schéma
      schema:
        location: "src/main/resources/graphql/"
        file-name: "auto-generated-schema.graphqls"
        generate-at-startup: true
        auto-reload: false
      
      # Configuration des performances
      performance:
        enable-dataloader: true
        batch-size: 100
        cache-size: 1000
        enable-async: true
      
      # Configuration de validation
      validation:
        enable-bean-validation: true
        fail-on-validation-error: true
        validate-schema-at-startup: true
      
      # Configuration pour le développement
      introspection:
        enabled: true
        playground: true
        playground-path: "/graphiql"

# Configuration du serveur
server:
  port: 8080
  servlet:
    context-path: /

# Configuration des logs
logging:
  level:
    com.enokdev: DEBUG
    org.springframework.graphql: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Configuration pour le profil de développement
---
spring:
  config:
    activate:
      on-profile: dev
  
  # Logs plus détaillés en développement
  logging:
    level:
      com.enokdev.graphql.autogen: TRACE
      root: INFO

---
spring:
  config:
    activate:
      on-profile: prod
  
  # Configuration de production
  graphql:
    autogen:
      introspection:
        enabled: false
        playground: false
      schema:
        generate-at-startup: false
  
  # Logs moins verbeux en production
  logging:
    level:
      com.enokdev: INFO
      org.springframework.graphql: WARN
      org.hibernate.SQL: WARN
